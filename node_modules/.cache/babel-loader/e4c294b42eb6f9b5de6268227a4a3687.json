{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction enhance(subject, methodEnhancers) {\n  var handler = {\n    get: function (target, prop, receiver) {\n      var origin = Reflect.get(target, prop, receiver);\n\n      if (origin instanceof Function) {\n        return new Proxy(origin, methodsProxyHandler(prop));\n      }\n\n      return origin;\n    }\n  };\n\n  var methodsProxyHandler = function (methodName) {\n    return {\n      apply: function (target, thisArg, argumentList) {\n        for (var _i = 0, methodEnhancers_1 = methodEnhancers; _i < methodEnhancers_1.length; _i++) {\n          var func = methodEnhancers_1[_i];\n          return func(methodName, {\n            target: target,\n            thisArg: thisArg,\n            argumentList: argumentList\n          });\n        }\n      }\n    };\n  };\n\n  var result = new Proxy(subject, handler);\n  return result;\n}\n\nexports.default = enhance;","map":null,"metadata":{},"sourceType":"script"}