{"ast":null,"code":"import _slicedToArray from \"/Users/jonathanortiz/AgoraIO/Basic-Video-Call/One-to-One-Video/Agora-Web-Tutorial-1to1-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\n\nconst useMediaStream = (client, filter) => {\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        localStream = _useState2[0],\n        setLocalStream = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        remoteStreamList = _useState4[0],\n        setRemoteStreamList = _useState4[1];\n\n  useEffect(() => {\n    let mounted = true; // add when subscribed\n\n    const addRemote = evt => {\n      if (!mounted) {\n        return;\n      }\n\n      const stream = evt.stream;\n      setRemoteStreamList(streamList => [...streamList, stream]);\n    }; // remove stream\n\n\n    const removeRemote = evt => {\n      const stream = evt.stream;\n\n      if (stream) {\n        const id = stream.getId();\n        const index = remoteStreamList.findIndex(item => item.getId() === id);\n\n        if (index !== -1) {\n          setRemoteStreamList(streamList => {\n            streamList.splice(index, 1);\n            return streamList;\n          });\n        }\n      }\n    }; // subscribe when added\n\n\n    const doSub = evt => {\n      if (!mounted) {\n        return;\n      }\n\n      if (filter) {\n        if (filter(evt.stream.getId())) {\n          client.subscribe(evt.stream);\n        }\n      } else {\n        client.subscribe(evt.stream);\n      }\n    }; // add when published\n\n\n    const addLocal = evt => {\n      if (!mounted) {\n        return;\n      }\n\n      const stream = evt.stream;\n      const stop = stream.stop;\n      const close = stream.close;\n\n      stream.close = (func => () => {\n        func();\n        setLocalStream(undefined);\n      })(close);\n\n      stream.stop = (func => () => {\n        func();\n        setLocalStream(undefined);\n      })(stop);\n\n      setLocalStream(stream);\n    };\n\n    if (client) {\n      client.on(\"stream-published\", addLocal);\n      client.on(\"stream-added\", doSub);\n      client.on(\"stream-subscribed\", addRemote);\n      client.on(\"peer-leave\", removeRemote);\n      client.on(\"stream-removed\", removeRemote);\n    }\n\n    return () => {\n      mounted = false;\n\n      if (client) {\n        client.gatewayClient.removeEventListener(\"stream-published\", addLocal);\n        client.gatewayClient.removeEventListener(\"stream-added\", doSub);\n        client.gatewayClient.removeEventListener(\"stream-subscribed\", addRemote);\n        client.gatewayClient.removeEventListener(\"peer-leave\", removeRemote);\n        client.gatewayClient.removeEventListener(\"stream-removed\", removeRemote);\n      }\n    };\n  }, [client, filter]);\n  return [localStream, remoteStreamList, [localStream].concat(remoteStreamList)];\n};\n\nexport default useMediaStream;","map":{"version":3,"sources":["/Users/jonathanortiz/AgoraIO/Basic-Video-Call/One-to-One-Video/Agora-Web-Tutorial-1to1-React/src/hooks/useMediaStream.ts"],"names":["useState","useEffect","useMediaStream","client","filter","undefined","localStream","setLocalStream","remoteStreamList","setRemoteStreamList","mounted","addRemote","evt","stream","streamList","removeRemote","id","getId","index","findIndex","item","splice","doSub","subscribe","addLocal","stop","close","func","on","gatewayClient","removeEventListener","concat"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useMediaStream = (client: any, filter?: (streamId: number) => boolean): any[] => {\n  const [localStream, setLocalStream] = useState<any>(undefined);\n  const [remoteStreamList, setRemoteStreamList] = useState<any[]>([]);\n\n  useEffect(() => {\n    let mounted = true;\n    // add when subscribed\n    const addRemote = (evt: any) => {\n      if (!mounted) {\n        return;\n      }\n      const { stream } = evt;\n      setRemoteStreamList(streamList => [...streamList, stream]);\n    };\n    // remove stream\n    const removeRemote = (evt: any) => {\n      const { stream } = evt;\n      if (stream) {\n        const id = stream.getId();\n        const index = remoteStreamList.findIndex(item => item.getId() === id);\n        if (index !== -1) {\n          setRemoteStreamList(streamList => {\n            streamList.splice(index, 1);\n            return streamList;\n          });\n        }\n      }\n    };\n    // subscribe when added\n    const doSub = (evt: any) => {\n      if (!mounted) {\n        return;\n      }\n      if (filter) {\n        if (filter(evt.stream.getId())) {\n          client.subscribe(evt.stream);\n        }\n      } else {\n        client.subscribe(evt.stream);\n      }\n    };\n    // add when published\n    const addLocal = (evt: any) => {\n      if (!mounted) {\n        return;\n      }\n      const { stream } = evt;\n      const stop = stream.stop;\n      const close = stream.close;\n      stream.close = (func => () => {\n        func()     \n        setLocalStream(undefined);   \n      })(close);\n      stream.stop = (func => () => {\n        func()     \n        setLocalStream(undefined);   \n      })(stop);\n      setLocalStream(stream)\n    };\n\n    if (client) {\n      client.on(\"stream-published\", addLocal);\n      client.on(\"stream-added\", doSub);\n      client.on(\"stream-subscribed\", addRemote);\n      client.on(\"peer-leave\", removeRemote);\n      client.on(\"stream-removed\", removeRemote);\n    }\n\n    return () => {\n      mounted = false;\n      if (client) {\n        client.gatewayClient.removeEventListener(\"stream-published\", addLocal);\n        client.gatewayClient.removeEventListener(\"stream-added\", doSub);\n        client.gatewayClient.removeEventListener(\"stream-subscribed\", addRemote);\n        client.gatewayClient.removeEventListener(\"peer-leave\", removeRemote);\n        client.gatewayClient.removeEventListener(\"stream-removed\", removeRemote);\n      }\n    };\n  }, [client, filter]);\n\n  return [localStream, remoteStreamList, [localStream].concat(remoteStreamList)];\n};\n\nexport default useMediaStream;\n"]},"metadata":{},"sourceType":"module"}