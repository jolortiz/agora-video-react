{"ast":null,"code":"import _slicedToArray from \"/Users/jonathanortiz/AgoraIO/Basic-Video-Call/One-to-One-Video/Agora-Web-Tutorial-1to1-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/jonathanortiz/AgoraIO/Basic-Video-Call/One-to-One-Video/Agora-Web-Tutorial-1to1-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jonathanortiz/AgoraIO/Basic-Video-Call/One-to-One-Video/Agora-Web-Tutorial-1to1-React/src/App.tsx\";\nimport React, { useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport StreamPlayer from \"agora-stream-player\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport { useCamera, useMicrophone, useMediaStream } from \"./hooks\";\nimport AgoraRTC from \"./utils/AgoraEnhancer\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: 12\n  },\n  title: {\n    fontWeight: 400\n  },\n  divider: {\n    marginBottom: \"32px\"\n  },\n  buttonContainer: {\n    display: \"flex\",\n    justifyContent: \"space-around\"\n  },\n  buttonItem: {\n    width: \"38.2%\"\n  },\n  advanceSettings: {\n    marginTop: 16\n  }\n}));\nconst defaultState = {\n  appId: \"\",\n  channel: \"\",\n  uid: \"\",\n  token: undefined,\n  cameraId: \"\",\n  microphoneId: \"\",\n  mode: \"rtc\",\n  codec: \"h264\"\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    default:\n      return state;\n\n    case \"setAppId\":\n      return _objectSpread({}, state, {\n        appId: action.value\n      });\n\n    case \"setChannel\":\n      return _objectSpread({}, state, {\n        channel: action.value\n      });\n\n    case \"setUid\":\n      return _objectSpread({}, state, {\n        uid: action.value\n      });\n\n    case \"setToken\":\n      return _objectSpread({}, state, {\n        token: action.value\n      });\n\n    case \"setCamera\":\n      return _objectSpread({}, state, {\n        cameraId: action.value\n      });\n\n    case \"setMicrophone\":\n      return _objectSpread({}, state, {\n        microphoneId: action.value\n      });\n\n    case \"setMode\":\n      return _objectSpread({}, state, {\n        mode: action.value\n      });\n\n    case \"setCodec\":\n      return _objectSpread({}, state, {\n        codec: action.value\n      });\n  }\n};\n\nfunction App() {\n  const classes = useStyles();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isJoined = _useState2[0],\n        setisJoined = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isPublished = _useState4[0],\n        setIsPublished = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isLoading = _useState6[0],\n        setIsLoading = _useState6[1];\n\n  const _useReducer = useReducer(reducer, defaultState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const _useState7 = useState(undefined),\n        _useState8 = _slicedToArray(_useState7, 2),\n        agoraClient = _useState8[0],\n        setClient = _useState8[1]; // const agoraClient = AgoraRTC.createClient({ mode: state.mode, codec: state.codec });\n\n\n  const cameraList = useCamera();\n  const microphoneList = useMicrophone();\n\n  let _useMediaStream = useMediaStream(agoraClient),\n      _useMediaStream2 = _slicedToArray(_useMediaStream, 3),\n      localStream = _useMediaStream2[0],\n      remoteStreamList = _useMediaStream2[1],\n      streamList = _useMediaStream2[2];\n\n  const _useSnackbar = useSnackbar(),\n        enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  const update = actionType => e => {\n    return dispatch({\n      type: actionType,\n      value: e.target.value\n    });\n  };\n\n  const join = async () => {\n    const client = AgoraRTC.createClient({\n      mode: state.mode,\n      codec: state.codec\n    });\n    setClient(client);\n    setIsLoading(true);\n\n    try {\n      const uid = isNaN(Number(state.uid)) ? null : Number(state.uid);\n      await client.init(state.appId);\n      await client.join(state.token, state.channel, uid);\n      const stream = AgoraRTC.createStream({\n        streamID: uid || 12345,\n        video: true,\n        audio: true,\n        screen: false\n      }); // stream.setVideoProfile('480p_4')\n\n      await stream.init();\n      await client.publish(stream);\n      setIsPublished(true);\n      setisJoined(true);\n      enqueueSnackbar(\"Joined channel \".concat(state.channel), {\n        variant: \"info\"\n      });\n    } catch (err) {\n      enqueueSnackbar(\"Failed to join, \".concat(err), {\n        variant: \"error\"\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const publish = async () => {\n    setIsLoading(true);\n\n    try {\n      if (localStream) {\n        await agoraClient.publish(localStream);\n        setIsPublished(true);\n      }\n\n      enqueueSnackbar(\"Stream published\", {\n        variant: \"info\"\n      });\n    } catch (err) {\n      enqueueSnackbar(\"Failed to publish, \".concat(err), {\n        variant: \"error\"\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const leave = async () => {\n    setIsLoading(true);\n\n    try {\n      if (localStream) {\n        localStream.close();\n        agoraClient.unpublish(localStream);\n      }\n\n      await agoraClient.leave();\n      setIsPublished(false);\n      setisJoined(false);\n      enqueueSnackbar(\"Left channel\", {\n        variant: \"info\"\n      });\n    } catch (err) {\n      enqueueSnackbar(\"Failed to leave, \".concat(err), {\n        variant: \"error\"\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const unpublish = () => {\n    if (localStream) {\n      agoraClient.unpublish(localStream);\n      setIsPublished(false);\n      enqueueSnackbar(\"Stream unpublished\", {\n        variant: \"info\"\n      });\n    }\n  };\n\n  const JoinLeaveBtn = () => {\n    return React.createElement(Button, {\n      className: classes.buttonItem,\n      color: isJoined ? \"secondary\" : \"primary\",\n      onClick: isJoined ? leave : join,\n      variant: \"contained\",\n      disabled: isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, isJoined ? \"Leave\" : \"Join\");\n  };\n\n  const PubUnpubBtn = () => {\n    return React.createElement(Button, {\n      className: classes.buttonItem,\n      color: isPublished ? \"secondary\" : \"default\",\n      onClick: isPublished ? unpublish : publish,\n      variant: \"contained\",\n      disabled: !isJoined || isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, isPublished ? \"Unpublish\" : \"Publish\");\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \"Basic Communication\"))), React.createElement(Toolbar, {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    value: state.appId,\n    onChange: update(\"setAppId\"),\n    id: \"appId\",\n    label: \"App ID\",\n    fullWidth: true,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    value: state.channel,\n    onChange: update(\"setChannel\"),\n    id: \"channel\",\n    label: \"Channel\",\n    fullWidth: true,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    value: state.token,\n    onChange: update(\"setToken\"),\n    id: \"token\",\n    label: \"Token\",\n    fullWidth: true,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }))), React.createElement(CardActions, {\n    className: classes.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(JoinLeaveBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }), React.createElement(PubUnpubBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }))), React.createElement(ThemeProvider, {\n    theme: createMuiTheme({\n      palette: {\n        type: \"dark\"\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, React.createElement(ExpansionPanel, {\n    className: classes.advanceSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(ExpansionPanelSummary, {\n    expandIcon: React.createElement(ExpandMoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, \"Advanced Settings\")), React.createElement(ExpansionPanelDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: state.uid,\n    id: \"uid\",\n    onChange: update(\"setUid\"),\n    label: \"UID\",\n    fullWidth: true,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"cameraId\",\n    value: state.cameraId,\n    onChange: update(\"setCamera\"),\n    select: true,\n    label: \"Camera\",\n    helperText: \"Please select your camera\",\n    fullWidth: true,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, cameraList.map(item => React.createElement(MenuItem, {\n    key: item.deviceId,\n    value: item.deviceId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, item.label))), React.createElement(TextField, {\n    id: \"microphoneId\",\n    value: state.microphoneId,\n    onChange: update(\"setMicrophone\"),\n    select: true,\n    label: \"Microphone\",\n    helperText: \"Please select your microphone\",\n    fullWidth: true,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, microphoneList.map(item => React.createElement(MenuItem, {\n    key: item.deviceId,\n    value: item.deviceId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, item.label))), React.createElement(FormControl, {\n    fullWidth: true,\n    component: \"fieldset\",\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, \"Mode\"), React.createElement(RadioGroup, {\n    row: true,\n    value: state.mode,\n    onChange: update(\"setMode\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"live\",\n    control: React.createElement(Radio, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }),\n    label: \"live\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"rtc\",\n    control: React.createElement(Radio, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }),\n    label: \"rtc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }))), React.createElement(FormControl, {\n    fullWidth: true,\n    component: \"fieldset\",\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }, \"Codec\"), React.createElement(RadioGroup, {\n    row: true,\n    value: state.codec,\n    onChange: update(\"setCodec\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"vp8\",\n    control: React.createElement(Radio, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }),\n    label: \"vp8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"h264\",\n    control: React.createElement(Radio, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }),\n    label: \"h264\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  })))))))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, localStream && React.createElement(StreamPlayer, {\n    stream: localStream,\n    fit: \"contain\",\n    label: \"local\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }), remoteStreamList.map(stream => React.createElement(StreamPlayer, {\n    key: stream.getId(),\n    stream: stream,\n    fit: \"contain\",\n    label: stream.getId(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }))))));\n}\n\nexport default function AppWithNotification() {\n  return React.createElement(SnackbarProvider, {\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    autoHideDuration: 2500,\n    maxSnack: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/jonathanortiz/AgoraIO/Basic-Video-Call/One-to-One-Video/Agora-Web-Tutorial-1to1-React/src/App.tsx"],"names":["React","useReducer","useState","makeStyles","Grid","Typography","Container","AppBar","Toolbar","Card","CardActions","CardContent","Button","TextField","MenuItem","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","ExpandMoreIcon","FormControlLabel","FormControl","FormLabel","Radio","RadioGroup","createMuiTheme","ThemeProvider","StreamPlayer","SnackbarProvider","useSnackbar","useCamera","useMicrophone","useMediaStream","AgoraRTC","useStyles","theme","root","flexGrow","padding","title","fontWeight","divider","marginBottom","buttonContainer","display","justifyContent","buttonItem","width","advanceSettings","marginTop","defaultState","appId","channel","uid","token","undefined","cameraId","microphoneId","mode","codec","reducer","state","action","type","value","App","classes","isJoined","setisJoined","isPublished","setIsPublished","isLoading","setIsLoading","dispatch","agoraClient","setClient","cameraList","microphoneList","localStream","remoteStreamList","streamList","enqueueSnackbar","update","actionType","e","target","join","client","createClient","isNaN","Number","init","stream","createStream","streamID","video","audio","screen","publish","variant","err","leave","close","unpublish","JoinLeaveBtn","PubUnpubBtn","palette","map","item","deviceId","label","getId","AppWithNotification","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport StreamPlayer from \"agora-stream-player\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nimport { useCamera, useMicrophone, useMediaStream } from \"./hooks\";\nimport AgoraRTC from \"./utils/AgoraEnhancer\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: 12\n  },\n  title: {\n    fontWeight: 400\n  },\n  divider: {\n    marginBottom: \"32px\"\n  },\n  buttonContainer: {\n    display: \"flex\",\n    justifyContent: \"space-around\"\n  },\n  buttonItem: {\n    width: \"38.2%\"\n  },\n  advanceSettings: {\n    marginTop: 16\n  }\n}));\n\nconst defaultState = {\n  appId: \"\",\n  channel: \"\",\n  uid: \"\",\n  token: undefined,\n  cameraId: \"\",\n  microphoneId: \"\",\n  mode: \"rtc\",\n  codec: \"h264\"\n};\n\nconst reducer = (\n  state: typeof defaultState,\n  action: { type: string; [propName: string]: any }\n) => {\n  switch (action.type) {\n    default:\n      return state;\n    case \"setAppId\":\n      return {\n        ...state,\n        appId: action.value\n      };\n    case \"setChannel\":\n      return {\n        ...state,\n        channel: action.value\n      };\n    case \"setUid\":\n      return {\n        ...state,\n        uid: action.value\n      };\n    case \"setToken\":\n      return {\n        ...state,\n        token: action.value\n      };\n    case \"setCamera\":\n      return {\n        ...state,\n        cameraId: action.value\n      };\n    case \"setMicrophone\":\n      return {\n        ...state,\n        microphoneId: action.value\n      };\n    case \"setMode\":\n      return {\n        ...state,\n        mode: action.value\n      };\n    case \"setCodec\":\n      return {\n        ...state,\n        codec: action.value\n      };\n  }\n};\n\nfunction App() {\n  const classes = useStyles();\n  const [isJoined, setisJoined] = useState(false);\n  const [isPublished, setIsPublished] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const [agoraClient, setClient] = useState<any>(undefined)\n  // const agoraClient = AgoraRTC.createClient({ mode: state.mode, codec: state.codec });\n  const cameraList = useCamera();\n  const microphoneList = useMicrophone();\n  let [localStream, remoteStreamList, streamList] = useMediaStream(agoraClient);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const update = (actionType: string) => (e: React.ChangeEvent<unknown>) => {\n    return dispatch({\n      type: actionType,\n      value: (e.target as HTMLInputElement).value\n    });\n  };\n\n  const join = async () => {\n    const client = AgoraRTC.createClient({ mode: state.mode, codec: state.codec })\n    setClient(client)\n    setIsLoading(true);\n    try {\n      const uid = isNaN(Number(state.uid)) ? null : Number(state.uid);\n      await client.init(state.appId);\n      await client.join(state.token, state.channel, uid);\n      const stream = AgoraRTC.createStream({\n        streamID: uid || 12345,\n        video: true,\n        audio: true,\n        screen: false\n      });\n      // stream.setVideoProfile('480p_4')\n      await stream.init();\n      await client.publish(stream);\n      setIsPublished(true);\n      setisJoined(true);\n      enqueueSnackbar(`Joined channel ${state.channel}`, { variant: \"info\" });\n    } catch (err) {\n      enqueueSnackbar(`Failed to join, ${err}`, { variant: \"error\" });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const publish = async () => {\n    setIsLoading(true);\n    try {\n      if (localStream) {\n        await agoraClient.publish(localStream);\n        setIsPublished(true);\n      }\n      enqueueSnackbar(\"Stream published\", { variant: \"info\" });\n    } catch (err) {\n      enqueueSnackbar(`Failed to publish, ${err}`, { variant: \"error\" });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const leave = async () => {\n    setIsLoading(true);\n    try {\n      if (localStream) {\n        localStream.close();\n        agoraClient.unpublish(localStream);\n      }\n      await agoraClient.leave();\n      setIsPublished(false);\n      setisJoined(false);\n      enqueueSnackbar(\"Left channel\", { variant: \"info\" });\n    } catch (err) {\n      enqueueSnackbar(`Failed to leave, ${err}`, { variant: \"error\" });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const unpublish = () => {\n    if (localStream) {\n      agoraClient.unpublish(localStream);\n      setIsPublished(false);\n      enqueueSnackbar(\"Stream unpublished\", { variant: \"info\" });\n    }\n  };\n\n  const JoinLeaveBtn = () => {\n    return (\n      <Button\n        className={classes.buttonItem}\n        color={isJoined ? \"secondary\" : \"primary\"}\n        onClick={isJoined ? leave : join}\n        variant=\"contained\"\n        disabled={isLoading}\n      >\n        {isJoined ? \"Leave\" : \"Join\"}\n      </Button>\n    );\n  };\n\n  const PubUnpubBtn = () => {\n    return (\n      <Button\n        className={classes.buttonItem}\n        color={isPublished ? \"secondary\" : \"default\"}\n        onClick={isPublished ? unpublish : publish}\n        variant=\"contained\"\n        disabled={!isJoined || isLoading}\n      >\n        {isPublished ? \"Unpublish\" : \"Publish\"}\n      </Button>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\">\n            Basic Communication\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Toolbar className={classes.divider} />\n      <Container>\n        <Grid container spacing={3}>\n          {/* form */}\n          <Grid item xs={12} md={4}>\n            <Card>\n              <CardContent>\n                <form noValidate autoComplete=\"off\">\n                  <TextField\n                    required\n                    value={state.appId}\n                    onChange={update(\"setAppId\")}\n                    id=\"appId\"\n                    label=\"App ID\"\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    required\n                    value={state.channel}\n                    onChange={update(\"setChannel\")}\n                    id=\"channel\"\n                    label=\"Channel\"\n                    fullWidth\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    value={state.token}\n                    onChange={update(\"setToken\")}\n                    id=\"token\"\n                    label=\"Token\"\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                </form>\n              </CardContent>\n              <CardActions className={classes.buttonContainer}>\n                <JoinLeaveBtn />\n                <PubUnpubBtn />\n              </CardActions>\n            </Card>\n\n            {/* advanced settings */}\n            <ThemeProvider\n              theme={createMuiTheme({\n                palette: {\n                  type: \"dark\"\n                }\n              })}\n            >\n              <ExpansionPanel className={classes.advanceSettings}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                  <Typography>Advanced Settings</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                  <form noValidate autoComplete=\"off\">\n                    <TextField\n                      value={state.uid}\n                      id=\"uid\"\n                      onChange={update(\"setUid\")}\n                      label=\"UID\"\n                      fullWidth\n                      margin=\"normal\"\n                    />\n                    <TextField\n                      id=\"cameraId\"\n                      value={state.cameraId}\n                      onChange={update(\"setCamera\")}\n                      select\n                      label=\"Camera\"\n                      helperText=\"Please select your camera\"\n                      fullWidth\n                      margin=\"normal\"\n                    >\n                      {cameraList.map(item => (\n                        <MenuItem key={item.deviceId} value={item.deviceId}>\n                          {item.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                    <TextField\n                      id=\"microphoneId\"\n                      value={state.microphoneId}\n                      onChange={update(\"setMicrophone\")}\n                      select\n                      label=\"Microphone\"\n                      helperText=\"Please select your microphone\"\n                      fullWidth\n                      margin=\"normal\"\n                    >\n                      {microphoneList.map(item => (\n                        <MenuItem key={item.deviceId} value={item.deviceId}>\n                          {item.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <FormControl fullWidth component=\"fieldset\" margin=\"normal\">\n                      <FormLabel>Mode</FormLabel>\n                      <RadioGroup\n                        row\n                        value={state.mode}\n                        onChange={update(\"setMode\")}\n                      >\n                        <FormControlLabel\n                          value=\"live\"\n                          control={<Radio color=\"primary\" />}\n                          label=\"live\"\n                        />\n                        <FormControlLabel\n                          value=\"rtc\"\n                          control={<Radio color=\"primary\" />}\n                          label=\"rtc\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n\n                    <FormControl fullWidth component=\"fieldset\" margin=\"normal\">\n                      <FormLabel>Codec</FormLabel>\n                      <RadioGroup\n                        row\n                        value={state.codec}\n                        onChange={update(\"setCodec\")}\n                      >\n                        <FormControlLabel\n                          value=\"vp8\"\n                          control={<Radio color=\"primary\" />}\n                          label=\"vp8\"\n                        />\n                        <FormControlLabel\n                          value=\"h264\"\n                          control={<Radio color=\"primary\" />}\n                          label=\"h264\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </form>\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n            </ThemeProvider>\n          </Grid>\n\n          {/* display area */}\n          <Grid item xs={12} md={8}>\n            {localStream && (\n              <StreamPlayer stream={localStream} fit=\"contain\" label=\"local\" />\n            )}\n            {remoteStreamList.map((stream: any) => (\n              <StreamPlayer\n                key={stream.getId()}\n                stream={stream}\n                fit=\"contain\"\n                label={stream.getId()}\n              />\n            ))}\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default function AppWithNotification() {\n  return (\n    <SnackbarProvider\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      autoHideDuration={2500}\n      maxSnack={5}\n    >\n      <App />\n    </SnackbarProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}