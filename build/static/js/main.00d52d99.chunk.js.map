{"version":3,"sources":["utils/AgoraEnhancer.ts","hooks/useCamera.ts","hooks/useMicrophone.ts","hooks/useMediaStream.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["enhancedAgoraRTC","enhanceAgoraRTC","AgoraRTC","fakeClient","createClient","mode","codec","noop","useCamera","client","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","cameraList","setCameraList","useEffect","mounted","onChange","getCameras","then","cameras","catch","on","gatewayClient","removeEventListener","useMicrophone","microphoneList","setMicrophoneList","getRecordingDevices","microphones","useMediaStream","filter","localStream","setLocalStream","_useState3","_useState4","remoteStreamList","setRemoteStreamList","addRemote","evt","stream","streamList","concat","toConsumableArray","removeRemote","id","getId","index","findIndex","item","splice","doSub","subscribe","addLocal","func","stop","close","useStyles","makeStyles","theme","root","flexGrow","padding","title","fontWeight","divider","marginBottom","buttonContainer","display","justifyContent","buttonItem","width","advanceSettings","marginTop","defaultState","appId","channel","uid","token","cameraId","microphoneId","reducer","state","action","type","objectSpread","value","App","classes","isMuted","setisMuted","isHidden","setisHidden","_useState5","_useState6","isJoined","setisJoined","_useState7","_useState8","isPublished","setIsPublished","_useState9","_useState10","isLoading","setIsLoading","_useReducer","useReducer","_useReducer2","dispatch","_useState11","_useState12","agoraClient","setClient","_useMediaStream","_useMediaStream2","enqueueSnackbar","useSnackbar","update","actionType","e","target","join","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","isNaN","Number","init","createStream","streamID","video","audio","screen","publish","variant","t0","finish","apply","this","_ref2","_callee2","_context2","leave","_ref3","_callee3","_context3","unpublish","mute","muteAudio","err","unmute","unmuteAudio","show","unmuteVideo","hide","muteVideo","react_default","createElement","Fragment","AppBar","color","Toolbar","Typography","className","Button","onClick","disabled","Container","Grid","container","spacing","xs","md","Card","CardContent","noValidate","autoComplete","TextField","required","label","fullWidth","margin","CardActions","ThemeProvider","createMuiTheme","palette","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails","select","helperText","map","MenuItem","key","deviceId","FormControl","component","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","es","fit","Boolean","window","location","hostname","match","primary","main","secondary","ReactDOM","render","build","anchorOrigin","vertical","horizontal","autoHideDuration","maxSnack","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00d52d99.chunk.js","sourcesContent":["import AgoraRTC from \"agora-rtc-sdk\";\nimport enhanceAgoraRTC from \"agoran-awe\";\n// promisify class Client & Stream\nconst enhancedAgoraRTC = enhanceAgoraRTC(AgoraRTC)\nexport default enhancedAgoraRTC","import { useState, useEffect } from 'react';\nimport AgoraRTC from '../utils/AgoraEnhancer';\nimport { IClientWithPromise } from 'agoran-awe/types/promisify';\n\nconst fakeClient = AgoraRTC.createClient({\n  mode: 'live',\n  codec: 'vp8'\n})\n\nconst noop = () => {};\n\ninterface MediaDeviceInfo {\n  label: string;\n  deviceId: string;\n}\n\nconst useCamera = (client = fakeClient): MediaDeviceInfo[] => {\n  const [cameraList, setCameraList] = useState<MediaDeviceInfo[]>([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const onChange = () => {\n      if (!client) {\n        return;\n      }\n      client\n        .getCameras()\n        .then((cameras: MediaDeviceInfo[]) => {\n          if (mounted) {\n            setCameraList(cameras);\n          }\n        })\n        .catch(noop);\n    };\n    \n    client && client.on('camera-changed', onChange);\n    \n    onChange();\n\n    return () => {\n      mounted = false;\n      client && (client as IClientWithPromise & {gatewayClient: any}).gatewayClient.removeEventListener('cameraChanged', onChange);\n    };\n  }, [client]);\n\n  return cameraList;\n};\n\nexport default useCamera;\n","import { useState, useEffect } from 'react';\nimport AgoraRTC from '../utils/AgoraEnhancer';\nimport { IClientWithPromise } from 'agoran-awe/types/promisify';\n\nconst fakeClient = AgoraRTC.createClient({\n  mode: 'live',\n  codec: 'vp8'\n})\n\nconst noop = () => {};\n\ninterface MediaDeviceInfo {\n  label: string;\n  deviceId: string;\n}\n\nconst useMicrophone = (client = fakeClient): MediaDeviceInfo[] => {\n  const [microphoneList, setMicrophoneList] = useState<MediaDeviceInfo[]>([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const onChange = () => {\n      if (!client) {\n        return\n      }\n      client\n        .getRecordingDevices()\n        .then((microphones: MediaDeviceInfo[]) => {\n          if (mounted) {\n            setMicrophoneList(microphones);\n          }\n        })\n        .catch(noop);\n    };\n\n    client && client.on('recording-device-changed', onChange);\n    onChange();\n\n    return () => {\n      mounted = false;\n      client && (client as IClientWithPromise & {gatewayClient: any}).gatewayClient.removeEventListener(\n        'recordingDeviceChanged',\n        onChange\n      );\n    };\n  }, [client]);\n\n  return microphoneList;\n};\n\nexport default useMicrophone;\n","import { useState, useEffect } from \"react\";\n\nconst useMediaStream = (client: any, filter?: (streamId: number) => boolean): any[] => {\n  const [localStream, setLocalStream] = useState<any>(undefined);\n  const [remoteStreamList, setRemoteStreamList] = useState<any[]>([]);\n\n  useEffect(() => {\n    let mounted = true;\n    // add when subscribed\n    const addRemote = (evt: any) => {\n      if (!mounted) {\n        return;\n      }\n      const { stream } = evt;\n      setRemoteStreamList(streamList => [...streamList, stream]);\n    };\n    // remove stream\n    const removeRemote = (evt: any) => {\n      const { stream } = evt;\n      if (stream) {\n        const id = stream.getId();\n        const index = remoteStreamList.findIndex(item => item.getId() === id);\n        if (index !== -1) {\n          setRemoteStreamList(streamList => {\n            streamList.splice(index, 1);\n            return streamList;\n          });\n        }\n      }\n    };\n    // subscribe when added\n    const doSub = (evt: any) => {\n      if (!mounted) {\n        return;\n      }\n      if (filter) {\n        if (filter(evt.stream.getId())) {\n          client.subscribe(evt.stream);\n        }\n      } else {\n        client.subscribe(evt.stream);\n      }\n    };\n    // add when published\n    const addLocal = (evt: any) => {\n      if (!mounted) {\n        return;\n      }\n      const { stream } = evt;\n      const stop = stream.stop;\n      const close = stream.close;\n      stream.close = (func => () => {\n        func()     \n        setLocalStream(undefined);   \n      })(close);\n      stream.stop = (func => () => {\n        func()     \n        setLocalStream(undefined);   \n      })(stop);\n      setLocalStream(stream)\n    };\n\n    if (client) {\n      client.on(\"stream-published\", addLocal);\n      client.on(\"stream-added\", doSub);\n      client.on(\"stream-subscribed\", addRemote);\n      client.on(\"peer-leave\", removeRemote);\n      client.on(\"stream-removed\", removeRemote);\n    }\n\n    return () => {\n      mounted = false;\n      if (client) {\n        client.gatewayClient.removeEventListener(\"stream-published\", addLocal);\n        client.gatewayClient.removeEventListener(\"stream-added\", doSub);\n        client.gatewayClient.removeEventListener(\"stream-subscribed\", addRemote);\n        client.gatewayClient.removeEventListener(\"peer-leave\", removeRemote);\n        client.gatewayClient.removeEventListener(\"stream-removed\", removeRemote);\n      }\n    };\n  }, [client, filter]);\n\n  return [localStream, remoteStreamList, [localStream].concat(remoteStreamList)];\n};\n\nexport default useMediaStream;\n","/*\n~~ Source Code cloned from https://github.com/AgoraIO/Basic-Video-Call/tree/master/One-to-One-Video/Agora-Web-Tutorial-1to1-React\n~~ I implemented: Enabling/Disabling Video, Muting/Unmuting Audio, Switching camera\n*/\nimport React, { useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport StreamPlayer from \"agora-stream-player\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nimport { useCamera, useMicrophone, useMediaStream } from \"./hooks\";\nimport AgoraRTC from \"./utils/AgoraEnhancer\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: 12\n  },\n  title: {\n    flexGrow: 1,\n    fontWeight: 400\n  },\n  divider: {\n    marginBottom: \"32px\"\n  },\n  buttonContainer: {\n    display: \"flex\",\n    justifyContent: \"space-around\"\n  },\n  buttonItem: {\n    width: \"38.2%\"\n  },\n  advanceSettings: {\n    marginTop: 16\n  }\n}));\n\nconst defaultState = {\n  appId: \"\",\n  channel: \"\",\n  uid: \"\",\n  token: undefined,\n  cameraId: \"\",\n  microphoneId: \"\",\n  mode: \"rtc\",\n  codec: \"h264\"\n};\n\nconst reducer = (\n  state: typeof defaultState,\n  action: { type: string; [propName: string]: any }\n) => {\n  switch (action.type) {\n    default:\n      return state;\n    case \"setAppId\":\n      return {\n        ...state,\n        appId: action.value\n      };\n    case \"setChannel\":\n      return {\n        ...state,\n        channel: action.value\n      };\n    case \"setUid\":\n      return {\n        ...state,\n        uid: action.value\n      };\n    case \"setToken\":\n      return {\n        ...state,\n        token: action.value\n      };\n    case \"setCamera\":\n      return {\n        ...state,\n        cameraId: action.value\n      };\n    case \"setMicrophone\":\n      return {\n        ...state,\n        microphoneId: action.value\n      };\n    case \"setMode\":\n      return {\n        ...state,\n        mode: action.value\n      };\n    case \"setCodec\":\n      return {\n        ...state,\n        codec: action.value\n      };\n  }\n};\n\nfunction App() {\n  const classes = useStyles();\n  const [isMuted, setisMuted] = useState(false);\n  const [isHidden, setisHidden] = useState(false);\n  const [isJoined, setisJoined] = useState(false);\n  const [isPublished, setIsPublished] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const [agoraClient, setClient] = useState<any>(undefined)\n  // const agoraClient = AgoraRTC.createClient({ mode: state.mode, codec: state.codec });\n  const cameraList = useCamera();\n  const microphoneList = useMicrophone();\n  let [localStream, remoteStreamList, streamList] = useMediaStream(agoraClient);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const update = (actionType: string) => (e: React.ChangeEvent<unknown>) => {\n    return dispatch({\n      type: actionType,\n      value: (e.target as HTMLInputElement).value\n    });\n  };\n\n  const join = async () => {\n    const client = AgoraRTC.createClient({ mode: state.mode, codec: state.codec })\n    setClient(client)\n    setIsLoading(true);\n    try {\n      const uid = isNaN(Number(state.uid)) ? null : Number(state.uid);\n      await client.init(state.appId);\n      await client.join(state.token, state.channel, uid);\n      const stream = AgoraRTC.createStream({\n        streamID: uid || 12345,\n        video: true,\n        audio: true,\n        screen: false\n      });\n      // stream.setVideoProfile('480p_4')\n      await stream.init();\n      await client.publish(stream);\n      setIsPublished(true);\n      setisJoined(true);\n      enqueueSnackbar(`Joined channel ${state.channel}`, { variant: \"info\" });\n    } catch (err) {\n      enqueueSnackbar(`Failed to join, ${err}`, { variant: \"error\" });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const publish = async () => {\n    setIsLoading(true);\n    try {\n      if (localStream) {\n        await agoraClient.publish(localStream);\n        setIsPublished(true);\n      }\n      enqueueSnackbar(\"Stream published\", { variant: \"info\" });\n    } catch (err) {\n      enqueueSnackbar(`Failed to publish, ${err}`, { variant: \"error\" });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const leave = async () => {\n    setIsLoading(true);\n    try {\n      if (localStream) {\n        localStream.close();\n        agoraClient.unpublish(localStream);\n      }\n      await agoraClient.leave();\n      setIsPublished(false);\n      setisJoined(false);\n      enqueueSnackbar(\"Left channel\", { variant: \"info\" });\n    } catch (err) {\n      enqueueSnackbar(`Failed to leave, ${err}`, { variant: \"error\" });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const unpublish = () => {\n    if (localStream) {\n      agoraClient.unpublish(localStream);\n      setIsPublished(false);\n      enqueueSnackbar(\"Stream unpublished\", { variant: \"info\" });\n    }\n  };\n\n  const mute = () => {\n    try {\n      if (localStream) {\n        localStream.muteAudio();\n        setisMuted(true);\n      }\n    } catch(err) {\n      enqueueSnackbar(`Failed to mute, ${err}`, { variant: \"error\" });\n    }\n  }\n\n  const unmute = () => {\n    try {\n      if (localStream) {\n        localStream.unmuteAudio();\n        setisMuted(false);\n      }\n    } catch(err) {\n      enqueueSnackbar(`Failed to unmute, ${err}`, { variant: \"error\" });\n    }\n  }\n\n  const show = () => {\n    try {\n      if (localStream) {\n        localStream.unmuteVideo();\n        setisHidden(false);\n      }\n    } catch(err) {\n      enqueueSnackbar(`Failed to enable video, ${err}`, { variant: \"error\" });\n    }\n  }\n\n  const hide = () => {\n    try {\n      if (localStream) {\n        localStream.muteVideo();\n        setisHidden(true);\n      }\n    } catch(err) {\n      enqueueSnackbar(`Failed to disable video, ${err}`, { variant: \"error\" });\n    }\n  }\n\n  const VideoEnableDisableBtn = () => {\n    return (\n      <Button\n        color={isHidden ? \"primary\" : \"secondary\"}\n        onClick={isHidden ? show : hide}\n        variant=\"contained\"\n        disabled={!isJoined || isLoading}\n      >\n        {isHidden ? \"Show\" : \"Hide\"}\n      </Button>\n    );\n  }\n\n  const MuteUnmuteBtn = () => {\n    return (\n      <Button\n        color={isMuted ? \"primary\" : \"secondary\"}\n        onClick={isMuted ? unmute : mute}\n        variant=\"contained\"\n        disabled={!isJoined || isLoading}\n      >\n        {isMuted ? \"Unmute\" : \"Mute\"}\n      </Button>\n    );\n  }\n\n  const JoinLeaveBtn = () => {\n    return (\n      <Button\n        className={classes.buttonItem}\n        color={isJoined ? \"secondary\" : \"primary\"}\n        onClick={isJoined ? leave : join}\n        variant=\"contained\"\n        disabled={isLoading}\n      >\n        {isJoined ? \"Leave\" : \"Join\"}\n      </Button>\n    );\n  };\n\n  const PubUnpubBtn = () => {\n    return (\n      <Button\n        className={classes.buttonItem}\n        color={isPublished ? \"secondary\" : \"default\"}\n        onClick={isPublished ? unpublish : publish}\n        variant=\"contained\"\n        disabled={!isJoined || isLoading}\n      >\n        {isPublished ? \"Unpublish\" : \"Publish\"}\n      </Button>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\">\n            Demo\n          </Typography>\n          <MuteUnmuteBtn />\n          <VideoEnableDisableBtn />\n        </Toolbar>\n      </AppBar>\n      <Toolbar className={classes.divider} />\n      <Container>\n        <Grid container spacing={3}>\n          {/* form */}\n          <Grid item xs={12} md={4}>\n            <Card>\n              <CardContent>\n                <form noValidate autoComplete=\"off\">\n                  <TextField\n                    required\n                    value={state.appId}\n                    onChange={update(\"setAppId\")}\n                    id=\"appId\"\n                    label=\"App ID\"\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    required\n                    value={state.channel}\n                    onChange={update(\"setChannel\")}\n                    id=\"channel\"\n                    label=\"Channel\"\n                    fullWidth\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    value={state.token}\n                    onChange={update(\"setToken\")}\n                    id=\"token\"\n                    label=\"Token\"\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                </form>\n              </CardContent>\n              <CardActions className={classes.buttonContainer}>\n                <JoinLeaveBtn />\n                <PubUnpubBtn />\n              </CardActions>\n            </Card>\n\n            {/* advanced settings */}\n            <ThemeProvider\n              theme={createMuiTheme({\n                palette: {\n                  type: \"dark\"\n                }\n              })}\n            >\n              <ExpansionPanel className={classes.advanceSettings}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                  <Typography>Advanced Settings</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                  <form noValidate autoComplete=\"off\">\n                    <TextField\n                      value={state.uid}\n                      id=\"uid\"\n                      onChange={update(\"setUid\")}\n                      label=\"UID\"\n                      fullWidth\n                      margin=\"normal\"\n                    />\n                    <TextField\n                      id=\"cameraId\"\n                      value={state.cameraId}\n                      onChange={update(\"setCamera\")}\n                      select\n                      label=\"Camera\"\n                      helperText=\"Please select your camera\"\n                      fullWidth\n                      margin=\"normal\"\n                    >\n                      {cameraList.map(item => (\n                        <MenuItem key={item.deviceId} value={item.deviceId}>\n                          {item.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                    <TextField\n                      id=\"microphoneId\"\n                      value={state.microphoneId}\n                      onChange={update(\"setMicrophone\")}\n                      select\n                      label=\"Microphone\"\n                      helperText=\"Please select your microphone\"\n                      fullWidth\n                      margin=\"normal\"\n                    >\n                      {microphoneList.map(item => (\n                        <MenuItem key={item.deviceId} value={item.deviceId}>\n                          {item.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <FormControl fullWidth component=\"fieldset\" margin=\"normal\">\n                      <FormLabel>Mode</FormLabel>\n                      <RadioGroup\n                        row\n                        value={state.mode}\n                        onChange={update(\"setMode\")}\n                      >\n                        <FormControlLabel\n                          value=\"live\"\n                          control={<Radio color=\"primary\" />}\n                          label=\"live\"\n                        />\n                        <FormControlLabel\n                          value=\"rtc\"\n                          control={<Radio color=\"primary\" />}\n                          label=\"rtc\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n\n                    <FormControl fullWidth component=\"fieldset\" margin=\"normal\">\n                      <FormLabel>Codec</FormLabel>\n                      <RadioGroup\n                        row\n                        value={state.codec}\n                        onChange={update(\"setCodec\")}\n                      >\n                        <FormControlLabel\n                          value=\"vp8\"\n                          control={<Radio color=\"primary\" />}\n                          label=\"vp8\"\n                        />\n                        <FormControlLabel\n                          value=\"h264\"\n                          control={<Radio color=\"primary\" />}\n                          label=\"h264\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </form>\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n            </ThemeProvider>\n          </Grid>\n\n          {/* display area */}\n          <Grid item xs={12} md={8}>\n            {localStream && (\n              <StreamPlayer stream={localStream} fit=\"contain\" label=\"local\" />\n            )}\n            {remoteStreamList.map((stream: any) => (\n              <StreamPlayer\n                key={stream.getId()}\n                stream={stream}\n                fit=\"contain\"\n                label={stream.getId()}\n              />\n            ))}\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default function AppWithNotification() {\n  return (\n    <SnackbarProvider\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      autoHideDuration={2500}\n      maxSnack={5}\n    >\n      <App />\n    </SnackbarProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1E88E5\"\n    },\n    secondary: {\n      main: \"#FF4081\"\n    }\n  }\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}